name: Build/release

on: push

jobs:
  release:
    strategy:
      matrix:
        os: [ windows-latest,macOS-latest,ubuntu-latest]
    runs-on:
#      - self-hosted
      - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "CSC_LINK=${{secrets.MACOS_CSC_LINK}}" >> $GITHUB_ENV
          echo "CSC_KEY_PASSWORD=${{secrets.MACOS_CSC_KEY_PASSWORD}}" >> $GITHUB_ENV
          echo "APPLE_ID=${{secrets.APPLE_ID}}" >> $GITHUB_ENV
          echo "APPLE_ID_PASSWORD=${{secrets.APPLE_ID_PASSWORD}}" >> $GITHUB_ENV
        if: runner.os == 'macOS'
      - run: |
          echo "TRAVIS_PULL_REQUEST=_no_notarize" >> $GITHUB_ENV
        if: runner.os == 'macOS' && github.ref_type != 'tag'
      - uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: |
            pt-main/package-lock.json
            pt-web/package-lock.json
      - run: |
          npm ci --prefix pt-web pt-web
          npm --prefix pt-web run build
          cp -r pt-web/dist pt-main/dist
          npm ci --prefix pt-main pt-main --force
      - if: runner.os == 'ubuntu'
        run: | 
          echo "snap install............"
          sudo snap install snapcraft --classic
      - run: |
          npm --prefix pt-main run dist
        env:
          CI_BUILD_TAG: ${{ github.ref_type == 'tag' && github.ref_name || '' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # step5: cleanup artifacts in dist_electron
      - name: cleanup artifacts
        run: |
          npx rimraf "pt-main/!(*.exe|*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: pt-main

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "pt-main/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
